/* stlye guide
*{
  color: inherit;  상속받아라(reset css에 포함)
}
나눔체, 노토(선생님 선호!), 맑은고딕, ..... 
serif : 꺽이는 글자(디자인성)
sans serif : 꺽이지 않는 글자(가독성)
노토 산스 폰트
<link href="https://fonts.googleapis.com/css2?family=Noto+Sans+KR:wght@100;300;400;500;700;900&display=swap" rel="stylesheet">
font-family: 'Noto Sans KR', sans-serif;

나눔고딕 폰트
<link href="https://fonts.googleapis.com/css2?family=Nanum+Gothic:wght@400;700;800&display=swap" rel="stylesheet">
font-family: 'Nanum Gothic', sans-serif;

montserrat 영어 폰트
<link href="https://fonts.googleapis.com/css2?family=Montserrat:wght@100;200;300;400;500;600;700;800;900&display=swap" rel="stylesheet">
font-family: 'Montserrat', sans-serif;

raleway 폰트
<link href="https://fonts.googleapis.com/css2?family=Raleway:wght@100;200;300;400;500;600;700;800;900&display=swap" rel="stylesheet">
font-family: 'Raleway', sans-serif;

fontsawesome
<script src="https://kit.fontawesome.com/5c078cf8a0.js" crossorigin="anonymous"></script>
폰트 링크는 최상단에 권장, 최소 style css링크보다 상단에 위치해야 사용가능
*/
:root{
  /* 
  document개념(최상위), 이곳에서 --를 이용해서 저장을해야 모든객체에서
  값을 불러와서 사용가능
  */
  --main-color:#445678;
}
/*
h1{
  color:var(--main-color); root에서 매인컬러를 저장해놓고 호출 
}
*/
body{
  color: #333;
  font-size: 14px;/* em은 16px의 배수인 단위, em은 다른 객체에게 줄경우 부모기준으로 배수를 단위로 갖는다 */
  font-weight: normal;
  font-style: normal;
  text-decoration: none;
  line-height: 160%;/* reset에서 inherit를 쓸경우 중첩이 되기때문에 여기서만 설정 */
}
.svg1{
  display: block;
  margin: 30px auto;
  width: 90%;
  max-width: 500px;
}
.svg1 rect{
  width: 196px;
  height: 196px;
  x:2px;
  y:2px;
  stroke: red;
  stroke-width: 4px;
  fill: none;  
  stroke-dasharray: 8px;
  stroke-linecap: round;
  animation: dashMove 500s infinite linear;
}
@keyframes dashMove{
  0%{
    stroke-dashoffset: 0;
  }
  100%{
    stroke-dashoffset: 10000px;
  }
}
/* ----------------------------------------------------- */
.svg2-container{
  margin: 30px auto;
  width: 90%;
  max-width: 500px;
}
.svg2-container svg{
  display: block;
  width: 100%;
}
.svg2-container svg rect{
  width: 196px;
  height: 196px;
  x:2px;
  y:2px;
  stroke: red;
  stroke-width: 4px;
  fill: none;  
  stroke-dasharray: 784px;
  stroke-dashoffset: 784px;
  transition: stroke-dashoffset 3s;
/*   animation: strokeMove 10s infinite linear; */
}
/* @keyframes strokeMove{
  0%{stroke-dashoffset: 784px;}
  100%{stroke-dashoffset: 0;}
} */
.svg2-container.active svg rect{
  stroke-dashoffset: 0;
}
.svg3-container{
  margin: 30px auto;
  width: 90%;
  max-width: 500px;
}
.svg3-container svg{
  display: block;
  width: 100%;
}
.svg3-container svg circle{
  stroke-dasharray: 1;
  stroke-dashoffset: 1;
  transition: stroke-dashoffset 3s;
}
.svg3-container.active svg circle{
  stroke-dashoffset: 0;
}
div.svg4{
  margin:30px auto;
  max-width: 600px;
  width: 90%;
}
div.svg4 svg{
  display: block;
  width: 100%;
}
div.svg4 svg path{
  stroke: black;
  stroke-width: 4px;
  fill: rgba(0,0,0,0);
  stroke-dasharray: 1;
  stroke-dashoffset: 1;
  transition: stroke-dashoffset 10s, fill 3s;
  transition-delay: 0s, 2s;
}
div.svg4.active svg path{
  stroke-dashoffset: 0;
  fill:rgba(0,0,0,1)
}
div.svg5{
  margin:30px auto;
  max-width: 600px;
  width: 90%;
}
div.svg5 svg{
  display: block;
  width: 100%;
}
div.svg5 svg path{
  stroke: black;
  stroke-width: 4px;
  stroke-dasharray: 1;
  stroke-dashoffset: 1;
  animation: draw infinite 10s linear;
  fill: none;
}
@keyframes draw{
  0%{stroke-dashoffset: 1;}
  50%{stroke-dashoffset: 0;}
  100%{stroke-dashoffset: -1;}
}
