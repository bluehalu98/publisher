리액트 개발환경
nodejs - 자바스크립트 독립 실행기 
npm - 자바스크립트 라이브러리 설치 및 실행
barbel 라이브러리 - jsx문법
webpack - 압축기
create-react-app 라이브러리

1. vscode 설정 
    json파일에 추가
      "emmet.includeLanguages":{
        "javascript":"javascriptreact"
      }
    확장프로그램
      - reactjs code snippets
      - auto import
    vscode 관리자 권한 실행

2. node.js lts버전으로 설치 후 터미널에서 node -v로 확인

3. 리액트 프로젝트 세팅
    - 리액트 개발환경 구축 프로그램 설치
      npm install(i) -g create-react-app //create-react-app -V 설치확인
    
    - 리액트 프로젝트 폴더 만들기
      create-react-app folder-name

    - 리액트 서버환경 실행
      npm run start
    
    - 리액트 서버환경 종료
      ctrl + c

    - 리액트 깃허브 호스팅
      1) 깃허브 저장소 생성 (add readMe File 체크)
      2) addFile 업로드 후 commit change 클릭 (리액트일 경우, 빌드 전 package.json파일 수정)
        - npm install --save gh-pages를 터미널에 친뒤
        - scripts객체 안에 아래 두줄 추가
            "predeploy":"npm run build",
            "deploy": "gh-pages -d build",
        - 객채 맨위에 "hompage":"https://bluehalu98/github.io/mysite", 추가한뒤 build를 한다
        - setting/general/pages에서 branch를 main으로 설정후 save
        - npm uninstall gh-pages 로 다시 삭제 요망
      3) 리액트 빌드
      1) npm run build
      2) build 폴더 안의 파일들을 호스트 루트에 업로드

4. 리액트프로젝트를 깃과 연동시 주의사항
  .gitignore 파일에 node_modules파일 추가

5. 리액트 절대경로 변수
  html => %PUBLIC_URL%  ( <link href="%PUBLIC_URL%/css/style.css">)
  js => process.env.PUBLIC_URL (img.setAttribute('src','${process.env.PUBLIC_URL/img/a.jpg}'))



  - spa(single page app(web))
  - 컴포넌트 구성을 자바스크립트로 가능
  - 페이지 이동속도가 향상
