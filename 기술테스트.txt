1. 다음 설명 중 틀린 항목은?
4
1) semantic이란 사람보다 컴퓨터가 해석할 수 있는 의미론을 뜻한다
2) DOM이란 document의 구조를 의미한다
3) cross browsing 이란 다양한 웹브라우저에서 동일한 화면을 출력하는 방식을 의미한다
4) html의 tag와 element는 같은 의미이다
5) 웹표준과 접근성은 다른의미이다
------------------------------------------------------------------------------------------------
2. 다음 설명 중 틀린 항목은?
2
1) html문서에서 span은 tag name에 속한다
2) html문서에서 name은 tagname에 속한다
3) html문서에서 a는 tagname에 속한다
4) html문서에서 class는 attribute에 속한다
5) html문서에서 title은 tagname과 attribute 모두에 속한다
------------------------------------------------------------------------------------------------
3. 다음 설명 중 틀린 항목은?
2
1) input type number 요소는 size속성을 허락한다
2) label요소는 input요소의 부모객체로 허락된다
3) label요소의 for속성값은 input요소의 id속성값은 서로간에 동일해야 한다
4) input type radio요소의  name속성값은  동일한 값들을 가진 요소간의 그룹을 형성한다
5) form요소에서는 title속성을 이용한 접근성을 허락한다
------------------------------------------------------------------------------------------------
4. 다음 설명 중 틀린 항목은?
3
1) th요소는 필드네임을 의미한다
2) th요소는 scope속성을 허락한다
3) thead,tbody,tfooter요소는 tr요소의 자식요소로 허락된다
4) caption요소는 table요소의 자식요소로 허락된다
5) td,th요소는 colspan, rowspan속성을 허락한다
------------------------------------------------------------------------------------------------
5.아래의 마크업중 허용되지 않는 요소간의 노드는?
5
1) <a><div></div></a>
2) <ul><li><ul></ul></li></ul>
3) <div><p></p></div>
4) <h1><a></a></h1>
5) <span><p><p></span>
------------------------------------------------------------------------------------------------
6.아래의 설명 중 틀린 항목은?
4
1)header, main, section, footer, nav, aside 요소는 block 레벨에 해당함
2)a, span, i, b, strong, em 요소는 inline 레벨에  해당함
3)input, select, img, iframe, svg, canvas 요소는 inline-block 레벨에  해당함
4)h1, p, div, a는  inline 레벨  또는 inline-block 레벨의 부모가 될 수 있음
5)span, a, i, label 요소는 block레벨의 부모가 될 수 없음

7. [보기]의 css코드 기준으로,  a요소와 p요소간의  수직 거리는?
3
[보기]
p{margin:10px 0}
a{margin:10px 0}

1)40px 2)30px 3)20px 4)10px 5)0px
------------------------------------------------------------------------------------------------
8. [보기]의 html 코드 기준으로,  .box요소를 .container요소의 오른쪽으로 정렬시키는 올바른 항목은?
1
[보기]
<div class="container">
  <div class="box">box</div>
</div>

1).box요소에 display : inline-block 적용 후, .container요소에 text-align : right 적용
2).box요소에 display : inline-block 적용 후 margin-left : auto 적용
3).container요소에 display : inline-block 적용 후  text-align : right 적용
4).container요소에 display : inline-block 적용 후  margin-left : auto 적용
5).container요소에  text-align : right 적용 후, .box요소에 margin-left : auto적용
------------------------------------------------------------------------------------------------
9. [보기]의 css코드 기준으로, div의  출력되는 수평 위치를 바르게 예상한 항목은?
4
[보기]
div{
  position : absolute;
  left : 10px;
  margin-left : -10px;
  margin : 0 auto;
}

1)수평 중앙
2)왼쪽
3)왼쪽으로부터 10px 거리
4)수평중앙의 왼쪽으로부터 10px 거리
5)수평중앙의 오른쪽으로부터 10px 거리
------------------------------------------------------------------------------------------------
10. [보기]의 css코드 기준으로, span요소의 출력 넓이를 바르게 예상한 항목은?
5
[보기]
span{
  width : 1px;
  padding : 1px;
  border: 1px solid red; 
}

1)0px 2)1px 3)2px 4)3px 5)4px
------------------------------------------------------------------------------------------------
11. [보기]의 코드결과 기준으로, .btn1요소 클릭이벤트시  콘솔창에 출력되는 결과값은?
4
[보기]
◆ html
<div>
  <button class="btn1" data-n="1">1</button>
  <button class="btn2" data-n="2">2</button>
  <button class="btn3" data-n="3">3</button>
</div>

◆ js
$('button').click(function(){
  var result = $(this).next('button').attr('data-n') + 1
  console.log( result )
})//click

1) 1
2) 2
3) '11'
4) '21'
5) error 발생
------------------------------------------------------------------------------------------------
12. [보기]의 코드결과 기준으로, .btn2요소 클릭이벤트시 콘솔창에 출력되는 결과값은?
5
[보기]
◆ html
<button class="btn1" data-n="1">1</button>
<button class="btn2" data-n="2">2</button>
<button class="btn3" data-n="3">3</button>

◆ js
function fn1(el){
  var result = parseInt( el.attr('data-n') )
  return result
}//fn1
function fn2(n){
  var result = n + 1
  return result
}//fn2
$('button').click(function(){
  var result = fn1( $(this) )
  result = fn2( result )
  console.log( result )
})//click

1) 1
2) '2'
3) 3
4) '4'
5) error 발생
------------------------------------------------------------------------------------------------
13. [보기]의 코드결과 기준으로, 콘솔창에 출력되는 결과값은?
2
[보기]
◆ html
<p>1</p>

◆ js
var num = parseInt($('p').html())
function fn(n){
  var result
  if(n === 1){
    return n++
  }else{
    return n
  }
}//fn
num = fn(num)
console.log(num)
1) 1
2) 2
3) 3
4) 4
5) error 발생
------------------------------------------------------------------------------------------------
14. [보기]의 코드결과 기준으로, 버튼의 클릭이벤트가 세번 발생했을 시, 콘솔창에 출력되는 결과값은?
4
[보기]
◆ html
<button data-n="2">btn</button>

◆ js
var sum = 0
function fn(el){
  var n = parseInt( el.attr('data-n') )
  sum += n
  console.log(sum)
}//fn
$('button').click(function(){
  fn($(this))
})//click

1) 0
2) 2
3) 4
4) 6
5) error 발생
------------------------------------------------------------------------------------------------
15. [보기]의 코드결과 기준으로, 버튼의 클릭이벤트가 세번 발생했을 시, 콘솔창에 출력되는 결과는?
1
[보기]
◆ html
<button>btn</button>

◆ js
var sum = 0
function fn(){
  sum += 1
  console.log(sum)
}//fn
$('button').click(function(){
  setTimeout(function(){
    fn()
  },1000)  
})//click
4
1) 1초후 1,2,3 출력
2) 1초후 1출력,  2초후 2출력, 3초후 3출력
3) 1초마다 1,2,3 반복 출력
4) 3초후 1,2,3 출력
5) error 발생